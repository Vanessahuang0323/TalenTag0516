import React from 'react';
import { motion, PanInfo } from 'framer-motion';

interface TalentCardProps {
  talent: {
    id: string;
    name: string;
    title: string;
    skills: string[];
    experience: string;
    image: string;
  };
  onSwipe: (direction: 'left' | 'right') => void;
}

const TalentCard: React.FC<TalentCardProps> = ({ talent, onSwipe }) => {
  const handleDragEnd = (event: MouseEvent | TouchEvent | PointerEvent, info: PanInfo) => {
    if (Math.abs(info.offset.x) > 100) {
      onSwipe(info.offset.x > 0 ? 'right' : 'left');
    }
  };

  return (
    <motion.div
      className="absolute w-[300px] h-[400px] bg-white rounded-xl shadow-xl cursor-grab"
      drag="x"
      dragConstraints={{ left: 0, right: 0 }}
      onDragEnd={handleDragEnd}
      whileDrag={{ scale: 1.05 }}
      animate={{ scale: 1 }}
    >
      <div className="relative w-full h-full rounded-xl overflow-hidden">
        <img
          src={talent.image}
          alt={talent.name}
          className="w-full h-1/2 object-cover"
        />
        <div className="p-4">
          <h2 className="text-xl font-bold">{talent.name}</h2>
          <p className="text-gray-600">{talent.title}</p>
          <div className="mt-2 flex flex-wrap gap-2">
            {talent.skills.map((skill, index) => (
              <span
                key={index}
                className="px-2 py-1 bg-blue-100 text-blue-600 rounded-full text-sm"
              >
                {skill}
              </span>
            ))}
          </div>
          <p className="mt-2 text-gray-700 text-sm">{talent.experience}</p>
        </div>
      </div>
    </motion.div>
  );
};

export default TalentCard;

import React, { useState } from 'react';
import TalentCard from './TalentCard';
import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';

interface Talent {
  id: string;
  name: string;
  title: string;
  skills: string[];
  experience: string;
  image: string;
}

const TalentMatching: React.FC<{ talents: Talent[] }> = ({ talents }) => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [likedTalents, setLikedTalents] = useState<Talent[]>([]);

  const handleSwipe = (direction: 'left' | 'right') => {
    if (direction === 'right') {
      setLikedTalents([...likedTalents, talents[currentIndex]]);
    }
    setCurrentIndex(prev => prev + 1);
  };

  if (currentIndex >= talents.length) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
        <h2 className="text-2xl font-bold mb-4">已完成所有候選人評估</h2>
        <p className="text-gray-600 mb-4">您已右滑選擇了 {likedTalents.length} 位候選人</p>
        <div className="w-full max-w-md">
          <h3 className="text-xl font-semibold mb-2">已選擇的候選人：</h3>
          {likedTalents.map(talent => (
            <div key={talent.id} className="bg-white p-4 rounded-lg shadow mb-2">
              <div className="flex items-center">
                <img
                  src={talent.image}
                  alt={talent.name}
                  className="w-12 h-12 rounded-full object-cover mr-4"
                />
                <div>
                  <h4 className="font-bold">{talent.name}</h4>
                  <p className="text-gray-600">{talent.title}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <div className="relative w-[300px] h-[400px]">
        <TalentCard
          talent={talents[currentIndex]}
          onSwipe={handleSwipe}
        />
      </div>
      <div className="flex gap-4 mt-8">
        <button
          onClick={() => handleSwipe('left')}
          className="p-4 bg-white rounded-full shadow-lg hover:bg-gray-50"
        >
          <ChevronLeftIcon className="w-8 h-8 text-red-500" />
        </button>
        <button
          onClick={() => handleSwipe('right')}
          className="p-4 bg-white rounded-full shadow-lg hover:bg-gray-50"
        >
          <ChevronRightIcon className="w-8 h-8 text-green-500" />
        </button>
      </div>
      <div className="mt-4 text-gray-600">
        {currentIndex + 1} / {talents.length}
      </div>
    </div>
  );
};

export default TalentMatching;

import React from 'react';
import TalentMatching from '../components/TalentMatching';

const sampleTalents = [
  {
    id: '1',
    name: '王小明',
    title: '前端工程師',
    skills: ['React', 'TypeScript', 'Node.js'],
    experience: '3年網頁開發經驗，專注於前端技術',
    image: 'https://randomuser.me/api/portraits/men/1.jpg',
  },
  {
    id: '2',
    name: '李小華',
    title: '後端工程師',
    skills: ['Python', 'Django', 'PostgreSQL'],
    experience: '4年後端開發經驗，擅長數據庫優化',
    image: 'https://randomuser.me/api/portraits/women/2.jpg',
  },
  {
    id: '3',
    name: '張小龍',
    title: '全端工程師',
    skills: ['Vue.js', 'Java', 'Spring Boot'],
    experience: '5年全端開發經驗，具備良好的系統架構能力',
    image: 'https://randomuser.me/api/portraits/men/3.jpg',
  },
  {
    id: '4',
    name: '陳小琳',
    title: 'UI/UX 設計師',
    skills: ['Figma', 'Adobe XD', 'Sketch'],
    experience: '3年設計經驗，專注於使用者體驗優化',
    image: 'https://randomuser.me/api/portraits/women/4.jpg',
  },
];

const TalentMatchingPage: React.FC = () => {
  return (
    <div className="min-h-screen bg-gray-100">
      <div className="container mx-auto px-4">
        <div className="py-8">
          <h1 className="text-3xl font-bold text-center mb-8">人才配對</h1>
          <TalentMatching talents={sampleTalents} />
        </div>
      </div>
    </div>
  );
};

export default TalentMatchingPage;

import React from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { AppProvider } from './context/AppContext';

// Pages
import HomePage from './pages/HomePage';
import CompanyRegisterPage from './pages/CompanyRegisterPage';
import CompanyChatPage from './pages/CompanyChatPage';
import CompanyResultsPage from './pages/CompanyResultsPage';
import CandidateViewPage from './pages/CandidateViewPage';
import ChatWithCandidatePage from './pages/ChatWithCandidatePage';
import StudentRegisterPage from './pages/StudentRegisterPage';
import ResumeCompletionPage from './pages/ResumeCompletionPage';
import CareerObjectivesPage from './pages/CareerObjectivesPage';
import StudentAnalysisPage from './pages/StudentAnalysisPage';
import UploadResumePage from './pages/UploadResumePage';
import StudentDashboardPage from './pages/StudentDashboardPage';
import TalentMatchingPage from './pages/TalentMatchingPage';

function App() {
  return (
    <AppProvider>
      <Router>
        <div className="font-sans text-gray-900">
          <Routes>
            {/* Common Routes */}
            <Route path="/" element={<HomePage />} />
            
            {/* Company Routes */}
            <Route path="/company/register" element={<CompanyRegisterPage />} />
            <Route path="/company/chat" element={<CompanyChatPage />} />
            <Route path="/company/results" element={<CompanyResultsPage />} />
            <Route path="/company/candidate-view" element={<CandidateViewPage />} />
            <Route path="/company/chat-with-candidate" element={<ChatWithCandidatePage />} />
            <Route path="/company/talent-matching" element={<TalentMatchingPage />} />
            
            {/* Student Routes */}
            <Route path="/student/register" element={<StudentRegisterPage />} />
            <Route path="/student/resume-completion" element={<ResumeCompletionPage />} />
            <Route path="/student/career-objectives" element={<CareerObjectivesPage />} />
            <Route path="/student/analysis" element={<StudentAnalysisPage />} />
            <Route path="/student/upload-resume" element={<UploadResumePage />} />
            <Route path="/student/dashboard" element={<StudentDashboardPage />} />
            
            {/* Fallback */}
            <Route path="*" element={<Navigate to="/" />} />
          </Routes>
        </div>
      </Router>
    </AppProvider>
  );
}

export default App;

import React from 'react';
import { useNavigate } from 'react-router-dom';

const CompanyResultsPage: React.FC = () => {
  const navigate = useNavigate();

  const handleNextStep = () => {
    navigate('/company/talent-matching');
  };

  return (
    <div className="min-h-screen bg-gray-100">
      <div className="container mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold mb-6">AI 分析結果</h1>
        
        {/* 这里是您现有的 AI 分析结果内容 */}
        
        <div className="mt-8 flex justify-center">
          <button
            onClick={handleNextStep}
            className="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-300 flex items-center"
          >
            <span>開始人才配對</span>
            <svg
              className="w-5 h-5 ml-2"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M9 5l7 7-7 7"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  );
};

export default CompanyResultsPage;